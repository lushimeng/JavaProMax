
package com.itheima.d6_char_stream;

import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.Reader;

/**
 目标：字符输出流的使用。

 IO流的体系：
 字节流                                   字符流
 字节输入流           字节输出流               字符输入流       字符输出流
 InputStream         OutputStream           Reader         Writer     (抽象类)
 FileInputStream     FileOutputStream       FileReader     FileWriter (实现类)

 d.FileWriter文件字符输出流的使用。
 -- 作用：以内存为基准，把内存中的数据按照字符的形式写出到磁盘文件中去。
 简单来说，就是把内存的数据以字符写出到文件中去。
 -- 构造器：
 public FileWriter(File file):创建一个字符输出流管道通向目标文件对象。
 public FileWriter(String filePath):创建一个字符输出流管道通向目标文件路径。
 public FileWriter(File file,boolean append):创建一个追加数据的字符输出流管道通向目标文件对象。
 public FileWriter(String filePath,boolean append):创建一个追加数据的字符输出流管道通向目标文件路径。
 -- 方法：
 a.public void write(int c):写一个字符出去
 b.public void write(String c)写一个字符串出去：
 c.public void write(char[] buffer):写一个字符数组出去
 d.public void write(String c ,int pos ,int len):写字符串的一部分出去
 e.public void write(char[] buffer ,int pos ,int len):写字符数组的一部分出去
 小结：
 字符输出流可以写字符数据出去，总共有5个方法写字符。
 覆盖管道：
 Writer fw = new FileWriter("Day10Demo/src/dlei03.txt"); // 覆盖数据管道
 追加数据管道：
 Writer fw = new FileWriter("Day10Demo/src/dlei03.txt",true); // 追加数据管道
 换行：
 fw.write("\r\n"); // 换行
 结论：读写字符文件数据建议使用字符流。复制文件建议使用字节流。
 */
public class FileReaderDemo1 {
    public static void main(String[] args) throws IOException {
        // 1、创建一个字符输入流管道与源文件接通
//        Reader fr = new FileReader(new File("Day10/src/text1.txt"));
        Reader fr = new FileReader("Day10/src/text1.txt");

        // 2、读取一个字符返回，没有可读的返回-1，返回的为int字符的编号
//        int code = fr.read();
//        System.out.println(code);
//        System.out.println((char)code);

        // 3、使用循环获取全部字符
        int code;
        while ((code = fr.read()) != -1){
            System.out.print((char)code);  // 要把对应的字符编号 --> 字符
        }



    }
}